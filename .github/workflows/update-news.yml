name: Update News Data

on:
  schedule:
    - cron: '0 */6 * * *'  # 6시간마다 실행
  workflow_dispatch:  # 수동 실행 가능

jobs:
  update-news:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install feedparser
    
    - name: Run news collector
      run: |
        python news_clipping/src/multi_keyword_collector.py
        
        # JSON 형식으로 변환
        python -c "
import json
from datetime import datetime
import re

def parse_news_file():
    news_data = {'energy': [], 'defense': [], 'insurance': [], 'lastUpdate': datetime.now().strftime('%Y-%m-%d %H:%M:%S')}
    current_category = None
    
    with open('news_clipping/output/multi_news_results.txt', 'r', encoding='utf-8') as f:
        for line in f:
            line = line.strip()
            if not line:
                continue
            
            if line.startswith('=== '):
                category = line.split(' ')[1]
                if category == '에너지':
                    current_category = 'energy'
                elif category == '방산':
                    current_category = 'defense'
                elif category == '보험':
                    current_category = 'insurance'
            elif line.startswith('- '):
                if current_category:
                    title_date = line[2:].rsplit(' (', 1)
                    if len(title_date) == 2:
                        title, date = title_date
                        date = date.rstrip(')')
                        news_data[current_category].append({
                            'title': title,
                            'date': date
                        })
    
    return news_data

news_data = parse_news_file()
with open('docs/data/news_data.json', 'w', encoding='utf-8') as f:
    json.dump(news_data, f, ensure_ascii=False, indent=2)
        "
    
    - name: Commit and push if changed
      run: |
        git config --global user.name 'GitHub Actions'
        git config --global user.email 'actions@github.com'
        git add docs/data/news_data.json
        git diff --quiet && git diff --staged --quiet || (git commit -m "Update news data" && git push) 